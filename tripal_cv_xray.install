<?php
/**
 * Hook Schema.
 */
function tripal_cv_xray_schema() {
  $schema = [];

  $schema['tripal_cvterm_entity_linker'] = tripal_cv_xray_cvterm_entity_linker();
  $schema['tripal_cv_xray_config'] = tripal_cv_xray_entity_config_schema();

  return $schema;
}

function tripal_cv_xray_install() {
  tripal_insert_cvterm([
    'id' => 'data:2353',
    'name' => 'Ontological data',
    'cv_name' => 'EDAM',
    'definition' => 'An identifier of a biological or bioinformatics database.',
  ]);
}

/**
 * Get config table.  This table is necessary for adding entities to the index
 * dynamically via hooks.
 *
 * @return array
 */
function tripal_cv_xray_entity_config_schema() {

  $schema = [
    'description' => 'cvxray admin table.  Tracks what entities and what CVs should be indexed.',
    'fields' => [
      'cv_xray_config_id' => [
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'shortname' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'chado db name (cv shortname)',
      ],
      'bundle_id' => [
        'type' => 'int',
        'description' => 'tripal bundle ID',
        'not null' => TRUE,
      ],
    ],
    'foreign keys' => [
      'bundle_id' => [
        'table' => 'tripal_bundle',
        'columns' => [
          'uid' => 'id',
        ],
      ],
    ],
  ];

  return $schema;
}

/**
 * Get linker table schema.
 *
 * @return array
 */
function tripal_cv_xray_cvterm_entity_linker() {
  $schema = [
    'description' => 'This table is used for tracking cvterm annotations.',
    'fields' => [
      'cvterm_entity_id' => [
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'cvterm_id' => [
        'description' => 'chado cvterm id',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'database' => [
        'description' => 'Database shortname for term.',
        'type' => 'varchar',
        'not null' => TRUE,
      ],
      'accession' => [
        'description' => 'Term accession.',
        'type' => 'varchar',
        'not null' => TRUE,
      ],

      'entity_id' => [
        'description' => 'entity id',
        'type' => 'int',
        'not null' => TRUE,
      ],
    ],
    'primary key' => [
      'cvterm_entity_id',
    ],
    'indexes' => [
      'cvterm_id_index' => ['cvterm_id'],
      'entity_id_index' => ['entity_id'],
      'accession_index' => ['accession'],
      'db_index' => ['database'],
    ],
    'foreign keys' => [
      'cvterm' => [
        'table' => 'cvterm',
        'columns' => [
          'uid' => 'cvterm_id',
        ],
      ],
      'entity_id' => [
        'table' => 'tripal_entity',
        'columns' => [
          'uid' => 'id',
        ],
      ],
    ],
  ];

  return $schema;

}

/**
 * Implements hook_uninstall.
 */
function tripal_cv_xray_uninstall() {
  if (db_table_exists('tripal_cvterm_entity_index')) {
    db_drop_table("tripal_cvterm_entity_index");
  }

  if (db_table_exists('tripal_cvterm_entity_linker')) {
    db_drop_table('tripal_cvterm_entity_linker');
  }
}

/**
 * Create linker table if missing.
 */
function tripal_cv_xray_update_7100() {
  if (!db_table_exists('tripal_cvterm_entity_linker')) {
    $schema = tripal_cvterm_entity_linker();

    db_create_table('tripal_cvterm_entity_linker', $schema);
  }
}

/**
 * Add the ontological data term.
 */
function tripal_cv_xray_update_7101() {
  //https://www.ebi.ac.uk/ols/ontologies/edam/terms?iri=http%3A%2F%2Fedamontology.org%2Fdata_2353
  tripal_insert_cvterm([
    'id' => 'data:2353',
    'name' => 'Ontological data',
    'cv_name' => 'EDAM',
    'definition' => 'An identifier of a biological or bioinformatics database.',
  ]);

}

/**
 * Creates the configuration table used for hooks.  Remove the unused index
 * table (we use the linker table instead.)
 */
function tripal_cv_xray_update_7102() {

  if (!db_table_exists('tripal_cv_xray_config')) {
    $schema = tripal_cv_xray_entity_config_schema();
    db_create_table('tripal_cv_xray_config', $schema);
  }

  if (db_table_exists('tripal_cvterm_entity_index')) {
    db_drop_table("tripal_cvterm_entity_index");
  }
}